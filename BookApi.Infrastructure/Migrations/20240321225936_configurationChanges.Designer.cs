// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20240321225936_configurationChanges")]
    partial class configurationChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Books")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Domain.Book.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books", "Books");
                });

            modelBuilder.Entity("Library.Domain.Book.Book", b =>
                {
                    b.OwnsOne("Library.Domain.Book.Entities.Lending", "Lending", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ID");

                            b1.Property<Guid>("BookId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BookID");

                            b1.Property<DateTime>("LendingDate")
                                .HasPrecision(2, 2)
                                .HasColumnType("datetime2(2)");

                            b1.Property<DateTime>("Return")
                                .HasPrecision(2, 2)
                                .HasColumnType("datetime2(2)");

                            b1.HasKey("Id", "BookId");

                            b1.HasIndex("BookId")
                                .IsUnique()
                                .HasDatabaseName("UK_BookID");

                            SqlServerIndexBuilderExtensions.IsClustered(b1.HasIndex("BookId"), false);

                            b1.ToTable("Lending", "Books");

                            b1.WithOwner("Book")
                                .HasForeignKey("BookId");

                            b1.Navigation("Book");
                        });

                    b.OwnsOne("Library.Domain.Book.Entities.Stock", "Stock", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ID");

                            b1.Property<Guid>("BookId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("BookID");

                            b1.Property<string>("Author")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("nvarchar(40)")
                                .IsFixedLength(false);

                            b1.Property<string>("Description")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .IsFixedLength(false);

                            b1.Property<string>("Genre")
                                .HasMaxLength(40)
                                .HasColumnType("nvarchar(40)")
                                .IsFixedLength(false);

                            b1.Property<string>("Isbn")
                                .IsRequired()
                                .HasColumnType("nchar(450)")
                                .IsFixedLength();

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .IsFixedLength(false);

                            b1.HasKey("Id", "BookId");

                            b1.HasIndex("BookId")
                                .IsUnique()
                                .HasDatabaseName("UK_BookID");

                            SqlServerIndexBuilderExtensions.IsClustered(b1.HasIndex("BookId"), false);

                            b1.HasIndex("Isbn")
                                .IsUnique()
                                .HasDatabaseName("UK_Isbn");

                            SqlServerIndexBuilderExtensions.IsClustered(b1.HasIndex("Isbn"), false);

                            b1.ToTable("Stock", "Books");

                            b1.WithOwner("Book")
                                .HasForeignKey("BookId");

                            b1.Navigation("Book");
                        });

                    b.Navigation("Lending");

                    b.Navigation("Stock");
                });
#pragma warning restore 612, 618
        }
    }
}
